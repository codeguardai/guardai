name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release:
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Run release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: python

  publish-to-testpypi:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install build twine

      - name: Build the package
        run: |
          python -m build

      - name: Publish to TestPyPI
        run: |
          twine upload --repository testpypi dist/*
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish-to-pypi:
    needs: publish-to-testpypi
    runs-on: ubuntu-latest
    if: ${{ needs.publish-to-testpypi.result == 'success' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install build twine

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Publish to PyPI
        run: |
          twine upload --repository pypi dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
